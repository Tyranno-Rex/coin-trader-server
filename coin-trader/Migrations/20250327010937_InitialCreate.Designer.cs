// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using coin_trader.Models;

#nullable disable

namespace coin_trader.Migrations
{
    [DbContext(typeof(coin_trader_context))]
    [Migration("20250327010937_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("coin_trader.Models.Coin", b =>
                {
                    b.Property<int>("CoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CoinId"));

                    b.Property<decimal>("CoinAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CoinName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("CoinPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("CoinWalletId")
                        .HasColumnType("int");

                    b.HasKey("CoinId");

                    b.HasIndex("CoinWalletId");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("coin_trader.Models.CoinTransaction", b =>
                {
                    b.Property<int>("CoinTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CoinTransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CoinName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CoinTransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("CoinTransactions");
                });

            modelBuilder.Entity("coin_trader.Models.CoinWallet", b =>
                {
                    b.Property<int>("CoinWalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CoinWalletId"));

                    b.Property<decimal>("CoinWalletCash")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CoinWalletPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CoinWalletId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("CoinWallets");
                });

            modelBuilder.Entity("coin_trader.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<decimal>("UserCash")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("coin_trader.Models.Coin", b =>
                {
                    b.HasOne("coin_trader.Models.CoinWallet", "CoinWallet")
                        .WithMany("Coins")
                        .HasForeignKey("CoinWalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoinWallet");
                });

            modelBuilder.Entity("coin_trader.Models.CoinTransaction", b =>
                {
                    b.HasOne("coin_trader.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("coin_trader.Models.CoinWallet", b =>
                {
                    b.HasOne("coin_trader.Models.User", "User")
                        .WithOne("CoinWallet")
                        .HasForeignKey("coin_trader.Models.CoinWallet", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("coin_trader.Models.CoinWallet", b =>
                {
                    b.Navigation("Coins");
                });

            modelBuilder.Entity("coin_trader.Models.User", b =>
                {
                    b.Navigation("CoinWallet");
                });
#pragma warning restore 612, 618
        }
    }
}
